name: Auto Release

on:
  pull_request:
    branches: [develop]
    types: [opened, synchronize, reopened, closed]
    paths:
      - "package.json"
  issue_comment:
    types: [created, edited]

jobs:
  generator:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.merged == false &&
      startsWith(github.head_ref, 'release/')
    steps:
      - run: echo "The head of this PR starts with 'release/'"
      - uses: actions/checkout@v3
      - uses: 94dreamer/auto-release@develop
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
  comment_add_log:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'issue_comment'
      && github.event.issue.pull_request
      && github.event.comment.user.login == github.event.issue.user.login
    steps:
      - id: comment
        run: |
          result=$(curl ${{github.event.issue.pull_request.url}} -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}")
          branch='"ref": "release/'
          if [[ $result =~ $branch ]]
          then
            echo "属于 release pr 的 comment"
            head.ref
          else
            echo "不属于 release pr 的 comment" && exit 1
          fi

          function reMatch {
            typeset ec
            unset -v reMatch
            [[ $1 =~ $2 ]]
            ec=$? # save exit code
            if [[ $ec -eq 0 ]]; then # copy result to output variable
              [[ -n $BASH_VERSION ]] && reMatch=( "${BASH_REMATCH[@]}" )
              [[ -n $KSH_VERSION ]]  && reMatch=( "${.sh.match[@]}" )
              [[ -n $ZSH_VERSION ]]  && reMatch=( "$MATCH" "${match[@]}" )
            fi
            return $ec
          }
          reMatch '"ref": "release/1.0.1",' '"ref": "(release/.+)",'
          echo ${reMatch[2]}
          echo "::set-output name=branch::$reMatch[2]"

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment.outputs.branch }}
      - run: echo $(git log)
      - run: echo ${{ github.event.comment.body }}

  merge_tag:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.merged == true &&
      startsWith(github.head_ref, 'release/')
    steps:
      - run: echo pr_merge_tag
